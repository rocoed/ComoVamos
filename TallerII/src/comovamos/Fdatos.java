package comovamos;


import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Fdatos.java
 *
 * Created on 09-nov-2012, 14:15:14
 */
/**
 *
 * @author chocobo
 */
public class Fdatos extends javax.swing.JFrame {

    /** Creates new form Fdatos */
    public Fdatos() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lregion = new javax.swing.JComboBox();
        lentidades = new javax.swing.JComboBox();
        lencuestas = new javax.swing.JComboBox();
        lindicadores = new javax.swing.JComboBox();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Filtrado de datos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lregion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        lregion.setToolTipText("Seleccione una region, para ver la info de todas las regiones selccione la opcion en blanco y de clic al boton de aplicar"); // NOI18N
        lregion.setName("lregion"); // NOI18N
        lregion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lregionActionPerformed(evt);
            }
        });

        lentidades.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        lentidades.setToolTipText("Seleccione una entidad, deje en blanco para ver la info de todas las entidades de la región seleccionada");
        lentidades.setName("lentidades"); // NOI18N

        lencuestas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        lencuestas.setName("lencuestas"); // NOI18N
        lencuestas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lencuestasActionPerformed(evt);
            }
        });

        lindicadores.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        lindicadores.setName("lindicadores"); // NOI18N

        jToolBar1.setRollover(true);
        jToolBar1.setAutoscrolls(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        jButton1.setToolTipText("Aplicar");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jInternalFrame1.setMaximizable(true);
        jInternalFrame1.setTitle("Gráfica de Barras");
        jInternalFrame1.setMaximumSize(new java.awt.Dimension(600, 800));
        jInternalFrame1.setMinimumSize(new java.awt.Dimension(300, 400));
        jInternalFrame1.setName("jInternalFrame1"); // NOI18N
        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1118, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 511, Short.MAX_VALUE)
        );

        jLabel1.setText("Region:");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("Entidad:");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText("Encuesta:");
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText("Indicador:");
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText("Periodo:");
        jLabel5.setName("jLabel5"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lencuestas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lentidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lregion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lindicadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1336, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lregion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lentidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lencuestas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lindicadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(jLabel5)
                        .addGap(248, 248, 248))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        try {
            jInternalFrame1.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
// TODO add your handling code here:
    limpiar();
    try {
            //tabla.setEnabled(false);
            con=new Conexion("tallerii1202","paul123");
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo acceder al servidor de la Base de Datos, verifique que tiene conexion con acceso al servidor", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VDatos.class.getName()).log(Level.SEVERE, null, ex);
        }
    llenarlregion();
    //llenarlentidades();        llenarlindicadores();
    lentidades.disable();lencuestas.disable();lindicadores.disable();
}//GEN-LAST:event_formWindowOpened

private void lregionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lregionActionPerformed
// TODO add your handling code here:
      System.out.println("indice seleccionado "+lregion.getSelectedIndex());
      if(lregion.getSelectedIndex()<1){lentidades.setSelectedIndex(-1);lencuestas.setSelectedIndex(-1);lindicadores.setSelectedIndex(-1);lentidades.disable();lencuestas.disable();lindicadores.disable();}
      if(lregion.getSelectedIndex()>0){lentidades.enable();llenarlentidades();lencuestas.enable();llenarlencuestas();}
}//GEN-LAST:event_lregionActionPerformed

private void lencuestasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lencuestasActionPerformed
// TODO add your handling code here:
    if(lencuestas.getSelectedIndex()>0){lindicadores.enable();llenarlindicadores();}
}//GEN-LAST:event_lencuestasActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    //código boton 1
    //programar para cuando alguna de las listas tengo 0
    String a,b,c,d,campos,tablas;
    tablas="com_region JOIN com_entidad JOIN com_plantilla JOIN com_indicador";
    campos="com_region.REG_nombreregion AS region,com_entidad.DZN_NombreEntidad AS Entidad,com_entidad.DZN_descripcion AS descripcion_entidad,com_plantilla.PLA_NomPlantilla AS Encuesta,com_plantilla.PLA_Descripcion AS descripcion_encuesta,com_plantilla.PLA_Periodo AS Perido,com_indicador.IND_Nombre AS Indicador";
    if(lregion.getSelectedIndex()<1){p1=new VDatos(campos,tablas,"WHERE com_region.REG_id=com_entidad.DZN_Region AND com_region.REG_Encuesta=com_plantilla.PLA_id AND com_plantilla.PLA_indicador=com_indicador.IND_id");p1.show();}
    if(lregion.getSelectedIndex()>0){a=lregion.getSelectedItem().toString();
        if(lentidades.getSelectedIndex()<1){/*De la region selccionada mostrar todas las entidades*/p1=new VDatos(campos,tablas,"WHERE com_region.REG_id=com_entidad.DZN_Region AND com_region.REG_Encuesta=com_plantilla.PLA_id AND com_plantilla.PLA_indicador=com_indicador.IND_id and com_region.REG_nombreRegion='"+lregion.getSelectedItem().toString()+"'");p1.show();}
        if(lentidades.getSelectedIndex()>0){b=lentidades.getSelectedItem().toString();
            if(lencuestas.getSelectedIndex()<1){/*de la entidad seleccionada mostrar todas las encuestas e indicadores*/}
            if(lencuestas.getSelectedIndex()>0){c=lencuestas.getSelectedItem().toString();
                if(lindicadores.getSelectedIndex()<1){/*Mostrar de la encuesta seleccionada todos los indicadores*/}
                if(lindicadores.getSelectedIndex()>0){d=lindicadores.getSelectedItem().toString();
                    //String campos, String tablas, String condicion
                    p1=new VDatos(campos,tablas,"where com_region.REG_id=com_entidad.DZN_Region AND com_region.REG_Encuesta=com_plantilla.PLA_id AND com_plantilla.PLA_indicador=com_indicador.IND_id and com_region.REG_nombreRegion='"+a+"' and com_entidad.DZN_NombreEntidad='"+b+"' and com_plantilla.PLA_NomPlantilla='"+c+"' and com_indicador.IND_Nombre='"+d+"'");
                    p1.show();
                }
            }
        }
    
    }
    
    VDatos ver=new VDatos("*","com_region JOIN com_entidad JOIN com_plantilla JOIN com_indicador","where ");
}//GEN-LAST:event_jButton1ActionPerformed
public void limpiar(){
    lregion.removeAllItems();
    lentidades.removeAllItems();
    lencuestas.removeAllItems();
    lindicadores.removeAllItems();
}
public int contarresultados(ResultSet r,String datos[]){//cuenta los resultados y los mete a un arreglo
    int x=0;    
    try {
            if(r.next()){
            r.first();
            
            while(r.next()){x=x+1;}
            }
            r.first();
        } catch (SQLException ex) {
            Logger.getLogger(Fdatos.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    return x+1;
}
public void llenararreglo(String d[],ResultSet r){
        try {
            for(int n=0;n<d.length;n++){d[n]=r.getString(1);r.next();}
        } catch (SQLException ex) {
            Logger.getLogger(Fdatos.class.getName()).log(Level.SEVERE, null, ex);
        }
}
public void llenarlista(String d[],JComboBox l){
for (int n=0;n<d.length;n++){l.addItem(d[n]);}
}
public void llenarlregion(){
    
    rs1=con.select(con, "Reg_nombreRegion", "com_region", "");
    System.out.println("Total de resultados "+contarresultados(rs1,dregiones));
    dregiones=new String[contarresultados(rs1,dregiones)];
    llenararreglo(dregiones,rs1);//metemos los datos a un arreglo
    lregion.addItem(" ");
    llenarlista(dregiones,lregion);//metemos el arreglo a la lista
    
}

public void llenarlentidades(){//método que llena la lista de entidades
    lentidades.removeAllItems();
    rs2=con.select(con, "DZN_NombreEntidad", "com_entidad,com_region", "where com_entidad.DZN_Region=com_region.REG_id and com_region.REG_nombreRegion='"+lregion.getSelectedItem().toString()+"'");
    //rs2=con.select(con, "DZN_NombreEntidad", "com_entidad", "");
    System.out.println("Total de resultados "+contarresultados(rs2,dentidades));
    dentidades=new String[contarresultados(rs2,dentidades)];
    llenararreglo(dentidades,rs2);//metemos los datos a un 
    lentidades.addItem(" ");
    llenarlista(dentidades,lentidades);//metemos el arreglo a la lista
    
}
public void llenarlencuestas(){//método que llena la lista de encuestas
    lencuestas.removeAllItems();
    rs3=con.select(con, "com_plantilla.PLA_NomPlantilla", "com_plantilLa,com_region", "where com_region.REG_Encuesta=com_plantilla.PLA_id and com_region.REG_nombreRegion='"+lregion.getSelectedItem().toString()+"'");
    //rs3=con.select(con, "com_plantila.PLA_nomPlantilla", "com_plantila", "");
    System.out.println("Total de resultados "+contarresultados(rs3,dencuestas));
    dencuestas=new String[contarresultados(rs3,dencuestas)];
    llenararreglo(dencuestas,rs3);//metemos los datos a un arreglo
    lencuestas.addItem(" ");
    llenarlista(dencuestas,lencuestas);//metemos el arreglo a la lista
    
}
public void llenarlindicadores(){//método que llena la lista de indicadores
    lindicadores.removeAllItems();
    rs4=con.select(con, "com_indicador.IND_Nombre", "com_indicador JOIN com_plantilla", "WHERE com_indicador.IND_id=com_Plantilla.PLA_Indicador AND com_plantilla.PLA_nomPlantilla='"+lencuestas.getSelectedItem().toString()+"'");
    //rs4=con.select(con, "com_indicador.IND_Nombre", "com_indicador", "");
    System.out.println("Total de resultados "+contarresultados(rs4,dindicadores));
    dindicadores=new String[contarresultados(rs4,dindicadores)];
    llenararreglo(dindicadores,rs4);//metemos los datos a un arreglo
    lindicadores.addItem(" ");
    llenarlista(dindicadores,lindicadores);//metemos el arreglo a la lista
    
}

/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fdatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fdatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fdatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fdatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Fdatos().setVisible(true);
            }
        });
    }

   
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JComboBox lencuestas;
    private javax.swing.JComboBox lentidades;
    private javax.swing.JComboBox lindicadores;
    private javax.swing.JComboBox lregion;
    // End of variables declaration//GEN-END:variables
    Conexion con;
    ResultSet rs4,rs1,rs2,rs3;
    int l=0,m=0;
    boolean bindicadores=false;
    VDatos p1;
    String dregiones[],dentidades[],dencuestas[],dindicadores[];
    
}
